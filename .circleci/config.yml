# Python CircleCI 2.0 configuration file
jobs:
  build:
    docker:
      - image: circleci/python:3.8.5
        auth:
            username: xian8290
            password: $DOCKERHUB_PASSWORD

      - image: confluentinc/cp-zookeeper:6.0.0
        hostname: zookeeper
        container_name: zookeeper
        auth:
          username: xian8290
          password: $DOCKERHUB_PASSWORD
        ports:
          - "2181:2181"
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000

      - image: confluentinc/cp-server:6.0.0
        hostname: broker
        container_name: broker
        auth:
            username: xian8290
            password: $DOCKERHUB_PASSWORD
        depends_on:
          - zookeeper
        ports:
          - "9092:9092"
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
          KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
          KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
          CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:29092
          KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
          CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: localhost:2181
          CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
          CONFLUENT_METRICS_ENABLE: 'true'
          CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

      - image: confluentinc/cp-schema-registry:6.0.0
        auth:
            username: xian8290
            password: $DOCKERHUB_PASSWORD
        depends_on:
          - broker
        ports:
          - "8081:8081"
        environment:
          SCHEMA_REGISTRY_HOST_NAME: schema-registry
          SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'localhost:29092'



    working_directory: ~/repo

    steps:
      # Step 1: obtain repo from GitHub
      - checkout
      # Step 2: create virtual env and install dependencies
      - run:
          name: install dependencies
          command: |
            pip install -r requirements.txt
      # Step 3: run tests
      - run:
          name: run tests
          command: |
            python -m pytest -v --cov=portfolio tests/
workflows:
  version: 2
  build:
    jobs:
      - build:
          context:
            - docker-hub-creds            