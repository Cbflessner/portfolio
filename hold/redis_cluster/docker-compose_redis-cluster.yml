version: "3.8"

services:
  producer:
    build:
      context: .
      dockerfile: Dockerfile_producer
    hostname: producer
    container_name: producer
    networks:
      portfolio:
        ipv4_address: 10.0.0.6  
    depends_on:
      - broker
      - schema-registry
    volumes:
      - type: bind
        source: .
        target: /portfolio
    ports: 
      - "5432:5432"    
    command: "./producer.py -t google_scraper -f /portfolio/kafka/kafka.config"  

  consumer:
    build:
      context: .
      dockerfile: Dockerfile_consumer
    hostname: consumer
    container_name: consumer
    networks:
      portfolio:
        ipv4_address: 10.0.0.5  
    depends_on:
      - producer
    volumes:
      - type: bind
        source: .
        target: /portfolio
    ports: 
      - "5433:5433"   
    command: "tail -f /dev/null"  

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      portfolio:
        ipv4_address: 10.0.0.4  
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    networks:
      portfolio:
        ipv4_address: 10.0.0.3 
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    networks:
      portfolio:
        ipv4_address: 10.0.0.2
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'

  redis-cluster:
    image: redis:6.0.8
    command: redis-cli --cluster create 10.0.0.11:7001 10.0.0.12:7002 10.0.0.13:7003 10.0.0.14:7004 10.0.0.15:7005 10.0.0.16:7006 --cluster-replicas 1 --cluster-yes
    depends_on:
      - redis_1
      - redis_2
      - redis_3
      - redis_4
      - redis_5
      - redis_6
    networks:
      portfolio:
        ipv4_address: 10.0.0.10

  redis_1:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_1
    container_name: redis_1
    environment:
      X_REDIS_PORT: 7001
    networks:
      portfolio:
        ipv4_address: 10.0.0.11
    ports:
      - 7001:6379

  redis_2:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_2
    container_name: redis_2
    environment:
      X_REDIS_PORT: 7002
    networks:
      portfolio:
        ipv4_address: 10.0.0.12
    ports:
      - 7002:6379

  redis_3:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_3
    container_name: redis_3
    environment:
      X_REDIS_PORT: 7003
    networks:
      portfolio:
        ipv4_address: 10.0.0.13
    ports:
      - 7003:6379

  redis_4:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_4
    container_name: redis_4
    environment:
      X_REDIS_PORT: 7004
    networks:
      portfolio:
        ipv4_address: 10.0.0.14
    ports:
      - 7004:6379  

  redis_5:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_5
    container_name: redis_5
    environment:
      X_REDIS_PORT: 7005
    networks:
      portfolio:
        ipv4_address: 10.0.0.15
    ports:
      - 7005:6379

  redis_6:
    build: ./redis
    image: redis-cluster-node
    hostname: redis_6
    container_name: redis_6
    environment:
      X_REDIS_PORT: 7006
    networks:
      portfolio:
        ipv4_address: 10.0.0.16
    ports:
      - 7006:6379

networks:
  portfolio:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/16

