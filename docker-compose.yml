
version: "3.8"

services:
  producer:
    build:
      context: .
      dockerfile: kafka/Dockerfile_producer
    hostname: producer
    container_name: producer
    depends_on:
      - broker_1
      # - broker_2
      # - broker_3
      - schema-registry
    # volumes:
    #   - type: bind
    #     source: ./kafka
    #     target: /home/portfolio/kafka
    environment:
      PYTHONUNBUFFERED: 1    
    ports: 
      - "5432:5432"       

  consumer:
    build:
      context: .
      dockerfile: kafka/Dockerfile_consumer
    hostname: consumer
    container_name: consumer
    depends_on:
      - producer
      - redis_1
    # volumes:
    #   - type: bind
    #     source: ./kafka
    #     target: /home/portfolio/kafka
    environment:
      PYTHONUNBUFFERED: 1
    ports: 
      - "5433:5433"   

  client:
    build:
      context: .
      dockerfile: ui/Dockerfile_client
    hostname: client
    container_name: client
    depends_on:
      - redis_1
    # volumes:
    #   - type: bind
    #     source: ./ui
    #     target: /home/portfolio/ui      
    environment:
      # SECRET_KEY: my-secret-key
      # DATABASE_URL:
      MAIL_PORT: 587
      MAIL_SERVER: smtp.googlemail.com
      MAIL_USE_TLS: 1
      MAIL_USERNAME: nwe8290@gmail.com
      MAIL_PASSWORD: TestAccount
    ports:
      - "8000:5000"    

  tests:
    build:
      context: .
      dockerfile: tests/Dockerfile_tests
    hostname: tests
    container_name: tests
    depends_on:
      - consumer
      - producer
      - client
    # volumes:
    #   - type: bind
    #     source: ./tests
    #     target: /home/portfolio/tests          
    ports:
      - "9000:9000"   

  zookeeper_1:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper_1
    container_name: zookeeper_1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVERS: 0.0.0.0:2888:3888;zookeeper_2:2888:3888;zookeeper_3:2888:3888

  zookeeper_2:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper_2
    container_name: zookeeper_2
    ports:
      - "2182:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVERS: zookeeper_1:2888:3888;0.0.0.0:2888:3888;zookeeper_3:2888:3888

  zookeeper_3:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper_3
    container_name: zookeeper_3
    ports:
      - "2183:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=*"
      ZOOKEEPER_SERVERS: zookeeper_1:2888:3888;zookeeper_2:2888:3888;0.0.0.0:2888:3888

  broker_1:
    image: confluentinc/cp-server:6.0.0
    hostname: broker
    container_name: broker_1
    depends_on:
      - zookeeper_1
      - zookeeper_2
      - zookeeper_3
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper_1:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_1:29092,PLAINTEXT_HOST://broker_1:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker_1:29092
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper_1:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  # broker_2:
  #   image: confluentinc/cp-server:6.0.0
  #   hostname: broker
  #   container_name: broker_2
  #   depends_on:
  #     - zookeeper_1
  #     - zookeeper_2
  #     - zookeeper_3
  #   ports:
  #     - "9093:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 2
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper_1:2181"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_2:29093,PLAINTEXT_HOST://broker_2:9093
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker_2:29093
  #     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
  #     CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper_1:2181
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  # broker_3:
  #   image: confluentinc/cp-server:6.0.0
  #   hostname: broker
  #   container_name: broker_3
  #   depends_on:
  #     - zookeeper_1
  #     - zookeeper_2
  #     - zookeeper_3
  #   ports:
  #     - "9094:9092"
  #   environment:
  #     KAFKA_BROKER_ID: 3
  #     KAFKA_ZOOKEEPER_CONNECT: "zookeeper_1:2181"
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker_3:29094,PLAINTEXT_HOST://broker_3:9094
  #     KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
  #     CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker_3:29094
  #     KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
  #     CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper_1:2181
  #     CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  #     CONFLUENT_METRICS_ENABLE: 'true'
  #     CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'      

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker_1
      # - broker_2
      # - broker_3
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker_1:29092'

  redis_1:
    build: 
      context: .
      dockerfile: redis/Dockerfile_redis
    hostname: redis_1
    container_name: redis_1
    ports:
      - 7001:6379
    command: "/etc/init.d/redis_7001 start"
