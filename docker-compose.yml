
version: "3.8"

services:
  producer:
    build:
      context: .
      dockerfile: Dockerfile_producer
    hostname: producer
    container_name: producer
    depends_on:
      - broker
      - schema-registry
    # volumes:
    #   - type: bind
    #     source: .
    #     target: /portfolio
    ports: 
      - "5432:5432"    
    command: "./producer.py -t google_scraper -f /portfolio/kafka/kafka.config"   

  consumer:
    build:
      context: .
      dockerfile: Dockerfile_consumer
    hostname: consumer
    container_name: consumer
    depends_on:
      - producer
    # volumes:
    #   - type: bind
    #     source: .
    #     target: /portfolio
    ports: 
      - "5433:5433"   
    command: "tail -f /dev/null"  

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'

  redis_1:
    build: ./redis
    hostname: redis_1
    container_name: redis_1
    ports:
      - 7001:6379
    command: "/etc/init.d/redis_7001 start"
