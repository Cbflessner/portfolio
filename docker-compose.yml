version: '2'

services:
  client:
    image: cimg/python:3.8.5
    hostname: client
    container_name: client
    ports: 
      - "5432:5432"
    #this second command is only here to keep the container from exiting after the pyton command is executed   
    volumes:
      - "portfolio:/home/circleci/portfolio"    
    command: "tail -f /dev/null"   

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-server:6.0.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://broker:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://localhost:8081
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'

  redis_1:
    image: redis:6.0.8
    hostname: redis_1
    container_name: redis_1
    ports:
      - "7000:7000"
      - "17000:17000"
    volumes:
      - "/~/portfolio/cluster-test/7000/redis.conf:/home/redis.conf"  

  redis_1a:
    image: redis:6.0.8
    hostname: redis_1a
    container_name: redis_1a
    ports:
      - "7001:7001"
      - "17001:17001"
    volumes:
      - "/~/portfolio/cluster-test/7001/redis.conf:/home/redis.conf"        

  redis_2:
    image: redis:6.0.8
    hostname: redis_2
    container_name: redis_2
    ports:
      - "7002:7002"
      - "17002:17002"
    volumes:
      - "/~/portfolio/cluster-test/7002/redis.conf:/home/redis.conf"        

  redis_2a:
    image: redis:6.0.8
    hostname: redis_2a
    container_name: redis_2a
    ports:
      - "7003:7003"
      - "17003:17003" 
    volumes:
      - "/~/portfolio/cluster-test/7003/redis.conf:/home/redis.conf"        

  redis_3:
    image: redis:6.0.8
    hostname: redis_3
    container_name: redis_3
    ports:
      - "7004:7004"
      - "17004:17004"
    volumes:
      - "/~/portfolio/cluster-test/7004/redis.conf:/home/redis.conf"        

  redis_3a:
    image: redis:6.0.8
    hostname: redis_3a
    container_name: redis_3a
    ports:
      - "7005:7005"
      - "17005:17005" 
    volumes:
      - "/~/portfolio/cluster-test/7005/redis.conf:/home/redis.conf"                  

volumes:
  portfolio:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/circleci/portfolio